prototype(DL.Gallery:Themes.AbstractTheme) < prototype(Neos.Neos:Content) {
    selectedTheme = ${node.properties.theme}

    attributes.class = Neos.Fusion:DataStructure {
        theme = ${'theme-' + q(node).property('theme')}
    }

    figureAttributes = Neos.Fusion:DataStructure {
        itemprop = 'associatedMedia'
        itemtype = 'http://schema.org/ImageObject'
        class = Neos.Fusion:DataStructure {
            neos-nodetypes-image = 'neos-nodetypes-image'
        }
        @process.makeAttributes = ${Neos.Array.toHtmlAttributesString(value)}
    }

    @context.themeSettings = ${Configuration.setting('DL.Gallery.themes.' + node.properties.theme + '.themeSettings')}
    @context.imagesSelected = ${q(node).property('tag') != null || q(node).property('assetCollection') != null || (Type.isArray(q(node).property('assets')) && Array.length(q(node).property('assets')) > 0)}
    imagesSelected = ${imagesSelected}

    backendError = DL.Gallery:Components.BackendError
    backendError.@if.noImageSelected = ${imagesSelected == false}
}
